{"version":3,"sources":["webpack:///path---blog-ddlink-ba470fb0f4464ab14e52.js","webpack:///./.cache/json/blog-ddlink.json"],"names":["webpackJsonp","346","module","exports","data","site","siteMetadata","siteUrl","title","author","description","facebookAppId","twitterUser","social","githubUrl","keybaseUrl","linkedInUrl","twitterUrl","markdownRemark","html","excerpt","timeToRead","frontmatter","path","date","cover","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,QAAA,sBAAAC,MAAA,YAAAC,OAAA,YAAAC,YAAA,6BAAAC,cAAA,mBAAAC,YAAA,aAAAC,QAA4LC,UAAA,8BAAAC,WAAA,8BAAAC,YAAA,wCAAAC,WAAA,oCAA2LC,gBAAmBC,KAAA,kgaAAk8aC,QAAA,iHAAAC,WAAA,EAAAC,aAA4SC,KAAA,gBAAAf,MAAA,gBAAAY,QAAA,YAAAI,KAAA,iBAAAC,MAAA,QAA4GC,aAAgBH,KAAA","file":"path---blog-ddlink-ba470fb0f4464ab14e52.js","sourcesContent":["webpackJsonp([154855465251290],{\n\n/***/ 346:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"siteUrl\":\"http://iapploft.net\",\"title\":\"Dave Wang\",\"author\":\"Dave Wang\",\"description\":\"Dave Wang blogs about code\",\"facebookAppId\":\"1373234856114390\",\"twitterUser\":\"dave__wang\",\"social\":{\"githubUrl\":\"https://github.com/davewang\",\"keybaseUrl\":\"https://keybase.io/davewang\",\"linkedInUrl\":\"https://www.linkedin.com/in/davewang/\",\"twitterUrl\":\"https://twitter.com/dave__wang\"}}},\"markdownRemark\":{\"html\":\"<hr>\\n<h3 id=\\\"双向链表比基础链表结构多了一个前置指针。\\\"><a href=\\\"#%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E6%AF%94%E5%9F%BA%E7%A1%80%E9%93%BE%E8%A1%A8%E7%BB%93%E6%9E%84%E5%A4%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E5%89%8D%E7%BD%AE%E6%8C%87%E9%92%88%E3%80%82\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>双向链表比基础链表结构多了一个前置指针。</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">struct</span> node <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">int</span> data<span class=\\\"token punctuation\\\">;</span>\\n  node <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">;</span>\\n  node <span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h3 id=\\\"链表对象\\\"><a href=\\\"#%E9%93%BE%E8%A1%A8%E5%AF%B9%E8%B1%A1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>链表对象</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">struct</span> dd_link\\n<span class=\\\"token punctuation\\\">{</span>\\n  node <span class=\\\"token operator\\\">*</span>head<span class=\\\"token punctuation\\\">;</span>\\n  node <span class=\\\"token operator\\\">*</span>tail<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h3 id=\\\"添加元素\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加元素</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>dd_link <span class=\\\"token operator\\\">*</span>link<span class=\\\"token punctuation\\\">,</span>node <span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">,</span>bool first <span class=\\\"token operator\\\">=</span> false<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">//需要复制 node内容需要malloc 这里不做内容复制只做逻辑处理</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>link<span class=\\\"token operator\\\">-></span>head<span class=\\\"token operator\\\">==</span><span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    link<span class=\\\"token operator\\\">-></span>head <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>tail <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">else</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>first<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token operator\\\">*</span> tmp <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>head<span class=\\\"token punctuation\\\">;</span>\\n      link<span class=\\\"token operator\\\">-></span>head <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n      n<span class=\\\"token operator\\\">-></span>n <span class=\\\"token operator\\\">=</span> tmp<span class=\\\"token punctuation\\\">;</span>\\n      tmp<span class=\\\"token operator\\\">-></span>p <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token operator\\\">*</span> tmp <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>tail<span class=\\\"token punctuation\\\">;</span>\\n      link<span class=\\\"token operator\\\">-></span>tail<span class=\\\"token operator\\\">-></span>n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n      n<span class=\\\"token operator\\\">-></span>p <span class=\\\"token operator\\\">=</span> tmp<span class=\\\"token punctuation\\\">;</span>\\n      link<span class=\\\"token operator\\\">-></span>tail <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"内容倒置-逻辑很简单就是把-前置和后继-指针做一下交换\\\"><a href=\\\"#%E5%86%85%E5%AE%B9%E5%80%92%E7%BD%AE-%E9%80%BB%E8%BE%91%E5%BE%88%E7%AE%80%E5%8D%95%E5%B0%B1%E6%98%AF%E6%8A%8A-%E5%89%8D%E7%BD%AE%E5%92%8C%E5%90%8E%E7%BB%A7-%E6%8C%87%E9%92%88%E5%81%9A%E4%B8%80%E4%B8%8B%E4%BA%A4%E6%8D%A2\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>内容倒置 逻辑很简单就是把 前置和后继 指针做一下交换</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">//交换</span>\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">swap</span><span class=\\\"token punctuation\\\">(</span>node <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">&amp;</span>x<span class=\\\"token punctuation\\\">,</span> node <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">&amp;</span>y<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  \\n  node <span class=\\\"token operator\\\">*</span>temp <span class=\\\"token operator\\\">=</span> x<span class=\\\"token punctuation\\\">;</span> \\n  x <span class=\\\"token operator\\\">=</span> y<span class=\\\"token punctuation\\\">;</span>\\n  y <span class=\\\"token operator\\\">=</span> temp<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">//倒置</span>\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">rever</span><span class=\\\"token punctuation\\\">(</span>dd_link <span class=\\\"token operator\\\">*</span>link<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  node<span class=\\\"token operator\\\">*</span> n<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">*</span>old_head<span class=\\\"token punctuation\\\">;</span>n <span class=\\\"token operator\\\">=</span> old_root <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>head<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">!=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    node <span class=\\\"token operator\\\">*</span>tmp_n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n    n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token operator\\\">-></span>n<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">swap</span><span class=\\\"token punctuation\\\">(</span>tmp_n<span class=\\\"token operator\\\">-></span>p<span class=\\\"token punctuation\\\">,</span>tmp_n<span class=\\\"token operator\\\">-></span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> \\n  link<span class=\\\"token operator\\\">-></span>head <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>tail<span class=\\\"token punctuation\\\">;</span>\\n  link<span class=\\\"token operator\\\">-></span>tail <span class=\\\"token operator\\\">=</span> old_head<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>测试</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">)</span>   \\n<span class=\\\"token punctuation\\\">{</span>   \\n   dd_link link <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   link<span class=\\\"token punctuation\\\">.</span>root <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">;</span>\\n   link<span class=\\\"token punctuation\\\">.</span>tail <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">;</span>\\n   \\n   node node1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   node1<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n\\n   node node2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   node2<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n   \\n   node node3 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   node3<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n\\n   <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>node2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>node1<span class=\\\"token punctuation\\\">,</span>true<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>node3<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n   <span class=\\\"token function\\\">loop_print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">rever</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"after rever\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">loop_print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>github地址：<a href=\\\"https://github.com/davewang/ddlink.git\\\">https://github.com/davewang/ddlink.git</a></p>\",\"excerpt\":\"双向链表比基础链表结构多了一个前置指针。 链表对象 添加元素 内容倒置 逻辑很简单就是把 前置和后继 指针做一下交换 测试 github地址： https://github.com/davewang/ddlink.git\",\"timeToRead\":2,\"frontmatter\":{\"path\":\"/blog/ddlink/\",\"title\":\"一个简单双向链表-内容倒置\",\"excerpt\":\"双向链表的内容倒置\",\"date\":\"April 21, 2018\",\"cover\":null}}},\"pathContext\":{\"path\":\"/blog/ddlink/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-ddlink-ba470fb0f4464ab14e52.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"siteUrl\":\"http://iapploft.net\",\"title\":\"Dave Wang\",\"author\":\"Dave Wang\",\"description\":\"Dave Wang blogs about code\",\"facebookAppId\":\"1373234856114390\",\"twitterUser\":\"dave__wang\",\"social\":{\"githubUrl\":\"https://github.com/davewang\",\"keybaseUrl\":\"https://keybase.io/davewang\",\"linkedInUrl\":\"https://www.linkedin.com/in/davewang/\",\"twitterUrl\":\"https://twitter.com/dave__wang\"}}},\"markdownRemark\":{\"html\":\"<hr>\\n<h3 id=\\\"双向链表比基础链表结构多了一个前置指针。\\\"><a href=\\\"#%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E6%AF%94%E5%9F%BA%E7%A1%80%E9%93%BE%E8%A1%A8%E7%BB%93%E6%9E%84%E5%A4%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E5%89%8D%E7%BD%AE%E6%8C%87%E9%92%88%E3%80%82\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>双向链表比基础链表结构多了一个前置指针。</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">struct</span> node <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">int</span> data<span class=\\\"token punctuation\\\">;</span>\\n  node <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">;</span>\\n  node <span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h3 id=\\\"链表对象\\\"><a href=\\\"#%E9%93%BE%E8%A1%A8%E5%AF%B9%E8%B1%A1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>链表对象</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">struct</span> dd_link\\n<span class=\\\"token punctuation\\\">{</span>\\n  node <span class=\\\"token operator\\\">*</span>head<span class=\\\"token punctuation\\\">;</span>\\n  node <span class=\\\"token operator\\\">*</span>tail<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h3 id=\\\"添加元素\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加元素</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>dd_link <span class=\\\"token operator\\\">*</span>link<span class=\\\"token punctuation\\\">,</span>node <span class=\\\"token operator\\\">*</span>n<span class=\\\"token punctuation\\\">,</span>bool first <span class=\\\"token operator\\\">=</span> false<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">//需要复制 node内容需要malloc 这里不做内容复制只做逻辑处理</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>link<span class=\\\"token operator\\\">-></span>head<span class=\\\"token operator\\\">==</span><span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    link<span class=\\\"token operator\\\">-></span>head <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>tail <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">else</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>first<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token operator\\\">*</span> tmp <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>head<span class=\\\"token punctuation\\\">;</span>\\n      link<span class=\\\"token operator\\\">-></span>head <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n      n<span class=\\\"token operator\\\">-></span>n <span class=\\\"token operator\\\">=</span> tmp<span class=\\\"token punctuation\\\">;</span>\\n      tmp<span class=\\\"token operator\\\">-></span>p <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token operator\\\">*</span> tmp <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>tail<span class=\\\"token punctuation\\\">;</span>\\n      link<span class=\\\"token operator\\\">-></span>tail<span class=\\\"token operator\\\">-></span>n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n      n<span class=\\\"token operator\\\">-></span>p <span class=\\\"token operator\\\">=</span> tmp<span class=\\\"token punctuation\\\">;</span>\\n      link<span class=\\\"token operator\\\">-></span>tail <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"内容倒置-逻辑很简单就是把-前置和后继-指针做一下交换\\\"><a href=\\\"#%E5%86%85%E5%AE%B9%E5%80%92%E7%BD%AE-%E9%80%BB%E8%BE%91%E5%BE%88%E7%AE%80%E5%8D%95%E5%B0%B1%E6%98%AF%E6%8A%8A-%E5%89%8D%E7%BD%AE%E5%92%8C%E5%90%8E%E7%BB%A7-%E6%8C%87%E9%92%88%E5%81%9A%E4%B8%80%E4%B8%8B%E4%BA%A4%E6%8D%A2\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>内容倒置 逻辑很简单就是把 前置和后继 指针做一下交换</h3>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">//交换</span>\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">swap</span><span class=\\\"token punctuation\\\">(</span>node <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">&amp;</span>x<span class=\\\"token punctuation\\\">,</span> node <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">&amp;</span>y<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  \\n  node <span class=\\\"token operator\\\">*</span>temp <span class=\\\"token operator\\\">=</span> x<span class=\\\"token punctuation\\\">;</span> \\n  x <span class=\\\"token operator\\\">=</span> y<span class=\\\"token punctuation\\\">;</span>\\n  y <span class=\\\"token operator\\\">=</span> temp<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">//倒置</span>\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">rever</span><span class=\\\"token punctuation\\\">(</span>dd_link <span class=\\\"token operator\\\">*</span>link<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  node<span class=\\\"token operator\\\">*</span> n<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">*</span>old_head<span class=\\\"token punctuation\\\">;</span>n <span class=\\\"token operator\\\">=</span> old_root <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>head<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">!=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    node <span class=\\\"token operator\\\">*</span>tmp_n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n    n <span class=\\\"token operator\\\">=</span> n<span class=\\\"token operator\\\">-></span>n<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">swap</span><span class=\\\"token punctuation\\\">(</span>tmp_n<span class=\\\"token operator\\\">-></span>p<span class=\\\"token punctuation\\\">,</span>tmp_n<span class=\\\"token operator\\\">-></span>n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> \\n  link<span class=\\\"token operator\\\">-></span>head <span class=\\\"token operator\\\">=</span> link<span class=\\\"token operator\\\">-></span>tail<span class=\\\"token punctuation\\\">;</span>\\n  link<span class=\\\"token operator\\\">-></span>tail <span class=\\\"token operator\\\">=</span> old_head<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>测试</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\">\\n      <pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">)</span>   \\n<span class=\\\"token punctuation\\\">{</span>   \\n   dd_link link <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   link<span class=\\\"token punctuation\\\">.</span>root <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">;</span>\\n   link<span class=\\\"token punctuation\\\">.</span>tail <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">;</span>\\n   \\n   node node1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   node1<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n\\n   node node2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   node2<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n   \\n   node node3 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n   node3<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n\\n   <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>node2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>node1<span class=\\\"token punctuation\\\">,</span>true<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>node3<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n   <span class=\\\"token function\\\">loop_print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">rever</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"after rever\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token function\\\">loop_print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>link<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>github地址：<a href=\\\"https://github.com/davewang/ddlink.git\\\">https://github.com/davewang/ddlink.git</a></p>\",\"excerpt\":\"双向链表比基础链表结构多了一个前置指针。 链表对象 添加元素 内容倒置 逻辑很简单就是把 前置和后继 指针做一下交换 测试 github地址： https://github.com/davewang/ddlink.git\",\"timeToRead\":2,\"frontmatter\":{\"path\":\"/blog/ddlink/\",\"title\":\"一个简单双向链表-内容倒置\",\"excerpt\":\"双向链表的内容倒置\",\"date\":\"April 21, 2018\",\"cover\":null}}},\"pathContext\":{\"path\":\"/blog/ddlink/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-ddlink.json\n// module id = 346\n// module chunks = 154855465251290"],"sourceRoot":""}